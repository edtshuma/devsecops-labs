x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-external-labels: job=dockerlogs,environment=development
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

version: '3.8'

services:
  
  app-a:
    build: .
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn app.main:app --host 0.0.0.0'
    volumes:
      - .:/app
    ports:
      - 8000:8000
    environment:
      - DATABASE_URL=postgresql://postgres:abc123@db:5432/fastapi
      - APP_NAME="app-a"
    depends_on:
      - db
      - loki
    logging: *default-logging

  db:
    image: postgres:latest
    container_name: postgresdb
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=abc123
      - POSTGRES_DB=fastapi

  webservice:
    image: nginx
    container_name: webservice
    ports:
      - 8001:80
    logging: *default-logging
    depends_on:
      - loki
  

  http-client:
    image: alpine
    container_name: http-client
    entrypoint: |
      sh -c 'sh -s << EOF
      apk --no-cache add curl
      while true
        do
          curl http://webservice
        done
      EOF'
    depends_on:
      - webservice

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  prometheus:
    restart: always
    container_name: prometheus
    image: prom/prometheus:v2.47.2 
    privileged: true
    volumes:
      - ./docs/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090 
    depends_on:
      - loki
    logging: *default-logging

  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./docs/grafana/:/etc/grafana/provisioning/datasources
      - grafanadata:/var/lib/grafana
    depends_on:
      - loki
      - prometheus
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
    logging: *default-logging

volumes:
  postgres_data:
  prometheusdata:
  grafanadata:
